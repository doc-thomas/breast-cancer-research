import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score

data = pd.read_csv(r'n:\your data\')

cutoff_score = #your cut-off#

data['predicted_label'] = (data['Nomogram.score'] > cutoff_score).astype(int)
conf_matrix = confusion_matrix(data['label'], data['predicted_label'])
accuracy = accuracy_score(data['label'], data['predicted_label'])
precision = precision_score(data['label'], data['predicted_label'])
recall = recall_score(data['label'], data['predicted_label'])
f1 = f1_score(data['label'], data['predicted_label'])
print("Confusion Matrix:")
print(conf_matrix)
print("\nAccuracy: {:.2f}".format(accuracy))
print("Precision: {:.2f}".format(precision))
print("Recall: {:.2f}".format(recall))
print("F1 Score: {:.2f}".format(f1))

plt.imshow(conf_matrix, interpolation='nearest', cmap=plt.cm.Blues)
plt.title('Confusion Matrix')
plt.colorbar()
classes = ['0', '1']
tick_marks = range(len(classes))
plt.xticks(tick_marks, classes)
plt.yticks(tick_marks, classes)
plt.xlabel('Predicted Label')
plt.ylabel('True Label')
for i in range(len(classes)):
    for j in range(len(classes)):
        plt.text(j, i, str(conf_matrix[i, j]), ha='center', va='center', color='black', fontsize=12)
plt.show()
